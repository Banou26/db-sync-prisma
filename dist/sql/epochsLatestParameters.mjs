import { makeTypedQueryFactory as $mkFactory } from "../runtime/library"
export const epochsLatestParameters = /*#__PURE__*/ $mkFactory("SELECT\nepoch_no AS \"epoch!\",\nmin_fee_a AS \"min_fee_a!\",\nmin_fee_b AS \"min_fee_b!\",\nmax_block_size AS \"max_block_size!\",\nmax_tx_size AS \"max_tx_size!\",\nmax_bh_size AS \"max_block_header_size!\",\nkey_deposit::TEXT AS \"key_deposit!\",\npool_deposit::TEXT AS \"pool_deposit!\",\nmax_epoch AS \"e_max!\",\noptimal_pool_count AS \"n_opt!\",\ninfluence AS \"a0!\",\nmonetary_expand_rate AS \"rho!\",\ntreasury_growth_rate AS \"tau!\",\ndecentralisation AS \"decentralisation_param!\",\nextra_entropy AS \"extra_entropy\",\nprotocol_major AS \"protocol_major_ver!\",\nprotocol_minor AS \"protocol_minor_ver!\",\nCOALESCE(coins_per_utxo_size, min_utxo_value)::TEXT AS \"min_utxo\",\nencode(nonce, 'hex') AS \"nonce\",\njson_build_object('foo', 'bar') AS \"cost_models\",\ncm.costs AS \"cost_models_raw\",\nprice_mem AS \"price_mem\",\nprice_step AS \"price_step\",\nmax_tx_ex_mem::TEXT AS \"max_tx_ex_mem\",\nmax_tx_ex_steps::TEXT AS \"max_tx_ex_steps\",\nmax_block_ex_mem::TEXT AS \"max_block_ex_mem\",\nmax_block_ex_steps::TEXT AS \"max_block_ex_steps\",\nmax_val_size::TEXT AS \"max_val_size\",\ncollateral_percent AS \"collateral_percent\",\nmax_collateral_inputs AS \"max_collateral_inputs\",\ncoins_per_utxo_size::TEXT AS \"coins_per_utxo_size\",\ncommittee_min_size::TEXT AS \"committee_min_size\",\ncommittee_max_term_length::TEXT AS \"committee_max_term_length\",\ngov_action_lifetime::TEXT AS \"gov_action_lifetime\",\ngov_action_deposit::TEXT AS \"gov_action_deposit\",\ndrep_deposit::TEXT AS \"drep_deposit\",\ndrep_activity::TEXT AS \"drep_activity\",\nmin_fee_ref_script_cost_per_byte AS \"min_fee_ref_script_cost_per_byte\"\nFROM epoch_param ep\nLEFT JOIN cost_model cm ON (ep.cost_model_id = cm.id)\nWHERE epoch_no = (\nSELECT MAX(no)\nFROM epoch\n);")
