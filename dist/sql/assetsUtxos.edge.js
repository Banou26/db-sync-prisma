"use strict"
const { makeTypedQueryFactory: $mkFactory } = require("@prisma/client/runtime/edge.js")
exports.assetsUtxos = /*#__PURE__*/ $mkFactory("SELECT\ntxo.address AS \"address!\",\nencode(tx.hash, 'hex') AS \"tx_hash!\",\ntxo.index AS \"tx_index!\",\ntxo.index AS \"output_index!\",\n(\nSELECT array_agg(obj)\nFROM (\nSELECT json_build_object(\n'unit', 'lovelace',\n'quantity', txo.value::TEXT\n)\nUNION ALL\nSELECT json_build_object(\n'unit', CONCAT(encode(policy, 'hex'), encode(name, 'hex')),\n'quantity', mto.quantity::TEXT\n)\nFROM ma_tx_out mto\nJOIN multi_asset ma ON (mto.ident = ma.id)\nWHERE mto.tx_out_id = txo.id\n) t(obj)\n) as \"amount!: Vec<Json<TransactionAmount>>\",\nencode(block.hash, 'hex') AS \"block!\",\nencode(data_hash, 'hex') AS \"data_hash\",\nencode(datum.bytes, 'hex') AS \"inline_datum\",\nencode(script.hash, 'hex') AS \"reference_script_hash\"\nFROM tx\nJOIN tx_out txo ON (tx.id = txo.tx_id)\nJOIN ma_tx_out ma_txo ON (ma_txo.tx_out_id = txo.id)\nJOIN multi_asset ma ON (ma_txo.ident = ma.id)\nJOIN block ON (block.id = tx.block_id)\nLEFT JOIN datum ON (txo.inline_datum_id = datum.id)\nLEFT JOIN script ON (txo.reference_script_id = script.id)\nWHERE\ntxo.consumed_by_tx_id IS NULL\nAND (encode(ma.policy, 'hex') || encode(ma.name, 'hex')) = $1\nAND tx.valid_contract = 'true'\nORDER BY block.slot_no ASC\nLIMIT $2\nOFFSET $3;")
